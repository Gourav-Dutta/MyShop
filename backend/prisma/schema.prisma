// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// ─────────────────────────────
// 1. User Roles
// ─────────────────────────────
// model User_role {
//   id    String @id @default(auto()) @map("_id") @db.ObjectId
//   role String @unique

//   users UserTable[]
// }

enum User_role {
  ADMIN
  SELLER
  USER
}

// ─────────────────────────────
// 2. User Table 
// ─────────────────────────────
model UserTable {
  id       String        @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  email    String        @unique
  phone_no String
  password String
  role     User_role
  product  Product[]
  cart     Add_To_Cart[]
  orders   Order[]
  address  Address[]
}

// ----------------
// Address Table
//-----------------
model Address {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  city       String
  state      String
  house_no   String
  shop_line  String?
  pin_no     String
  user_id    String    @db.ObjectId
  is_primary Boolean   @default(false)
  user       UserTable @relation(fields: [user_id], references: [id])

  @@index([user_id])
}

// ─────────────────────────────
// 3. Categories
// ─────────────────────────────
model Main_Categories {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String @unique

  sub_categories Sub_Categories[]
}

model Sub_Categories {
  id                String          @id @default(auto()) @map("_id") @db.ObjectId
  name              String
  main_categoriy_id String          @db.ObjectId
  main_category     Main_Categories @relation(fields: [main_categoriy_id], references: [id])

  products Product[]
}

// ----------------------------
// Brand 
// ----------------------------
model Brand {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String    @unique
  products Product[]
}

// ─────────────────────────────
// 4. Products
// ─────────────────────────────
model Product {
  id              String         @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  description     String?
  status          String         @default("active")
  user_id         String         @db.ObjectId
  base_image      String
  brand_id        String         @db.ObjectId
  created_at      DateTime       @default(now())
  updated_at      DateTime       @updatedAt
  sub_catagory_id String         @db.ObjectId
  sub_category    Sub_Categories @relation(fields: [sub_catagory_id], references: [id])
  user            UserTable      @relation(fields: [user_id], references: [id])
  brand           Brand          @relation(fields: [brand_id], references: [id])

  varirties      Product_Variety[]
  product_offers product_Offer[]
}

// ------------------------
// Product Variety Table
// -----------------------
model Product_Variety {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  productId  String   @db.ObjectId
  sku        String   @unique
  color      String?
  size       String?
  liter      String?
  weight     String?
  price      Int
  stock      Int      @default(0)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  product     Product         @relation(fields: [productId], references: [id])
  images      Product_Image[]
  cart_items  Add_To_Cart[]
  order_items Order_Item[]
}

//------------------------
// Product Image Table
// -----------------------
model Product_Image {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  varietyId  String  @db.ObjectId
  url        String
  alt_text   String?
  is_primary Boolean @default(false)

  variety Product_Variety @relation(fields: [varietyId], references: [id])
}

// -------------------------
// Offer Table
//--------------------------
enum DiscountType {
  percentage
  flat
}

model Offer {
  id             String       @id @default(auto()) @map("_id") @db.ObjectId
  title          String
  discount_type  DiscountType
  discount_value Float
  is_active      Boolean      @default(false)
  created_at     DateTime     @default(now())
  updated_at     DateTime     @updatedAt

  product_offer product_Offer[]
}

// -------------------
// Product Offer Table 
// -------------------
model product_Offer {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  productId  String   @db.ObjectId
  offerId    String   @db.ObjectId
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  product Product @relation(fields: [productId], references: [id])
  offer   Offer   @relation(fields: [offerId], references: [id])

  @@unique([productId, offerId])
}

// ─────────────────────────────
// 5. Add to Cart
// ─────────────────────────────
model Add_To_Cart {
  id                String @id @default(auto()) @map("_id") @db.ObjectId
  quantity          Int    @default(1)
  user_id           String @db.ObjectId
  productVariety_id String @db.ObjectId

  user           UserTable       @relation(fields: [user_id], references: [id])
  productVariety Product_Variety @relation(fields: [productVariety_id], references: [id])
}

// -------------------
// Payment Method
// -------------------
// model Payment_Method {
//   id              String @id @default(auto()) @map("_id")
//   payment_method String
// }

// -------------------
// Order status
// -------------------
enum OrderStatus {
  PENDING
  REJECTED
  DELIVERED
}

// ─────────────────────────────
// 6. Orders
// ─────────────────────────────
model Order {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  user_id     String   @db.ObjectId
  order_at    DateTime @default(now())
  total_price Int

  user  UserTable    @relation(fields: [user_id], references: [id])
  items Order_Item[]
}

// ─────────────────────────────
// 7. Order Items
// ─────────────────────────────
model Order_Item {
  id                String      @id @default(auto()) @map("_id") @db.ObjectId
  order_id          String      @db.ObjectId
  productVariety_id String      @db.ObjectId
  price             Float
  quantity          Int         @default(1)
  status            OrderStatus @default(PENDING)

  order          Order           @relation(fields: [order_id], references: [id])
  productVariety Product_Variety @relation(fields: [productVariety_id], references: [id])
}
